version: "3"
services:
  redis:
    image: redis:5.0.2-alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redis_vol:/data
  zookeeper:
    image: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_vol:/data
      - zookeeper_vol:/datalog
      - zookeeper_vol:/logs
    container_name: zookeeper

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "localhost"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LOG_DIRS: "/kafka/logs"
    volumes:
      - kafka_vol:/kafka
    depends_on:
      - zookeeper
    container_name: kafka
  mysql:
    image: my_mysql:5.7 # 自己的mysql 镜像，包含了初始化SQL
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "a123456"
      MYSQL_DATABASE: bizzan
    restart: on-failure
    privileged: true
    container_name: mysql
    volumes:
      - mysql_vol:/etc/conf.d
      - mysql_vol:/var/lib/mysql
  mongoDB:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: asdef323332
    container_name: mongodb
    volumes:
      - mongoDB_vol:/data/db
  could:
    image: cloud
    ports:
      - "7000:7000"
    container_name: cloud
  admin:
    image: admin
    ports:
      - "6010:6010"
    container_name: admin
    depends_on:
      - mysql
      - redis
      - mongoDB
      - kafka
      - zookeeper
volumes:
  zookeeper_vol: {}
  kafka_vol: {}
  redis_vol: {}
  mysql_vol: {}
  mongoDB_vol: {}



